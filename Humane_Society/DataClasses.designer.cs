#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Humane_Society
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HumaneSociety")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAnimal(Animal instance);
    partial void UpdateAnimal(Animal instance);
    partial void DeleteAnimal(Animal instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::Humane_Society.Properties.Settings.Default.HumaneSocietyConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Animal> Animals
		{
			get
			{
				return this.GetTable<Animal>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Animals")]
	public partial class Animal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AnimalName;
		
		private string _AnimalType;
		
		private string _AnimalBreed;
		
		private System.Nullable<bool> _VaccinatedYN;
		
		private System.Nullable<bool> _AdoptedYN;
		
		private System.Nullable<decimal> _AdoptionFee;
		
		private System.Nullable<int> _Room_;
		
		private string _FoodType;
		
		private System.Nullable<int> _FoodAmountPerWeek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnimalNameChanging(string value);
    partial void OnAnimalNameChanged();
    partial void OnAnimalTypeChanging(string value);
    partial void OnAnimalTypeChanged();
    partial void OnAnimalBreedChanging(string value);
    partial void OnAnimalBreedChanged();
    partial void OnVaccinatedYNChanging(System.Nullable<bool> value);
    partial void OnVaccinatedYNChanged();
    partial void OnAdoptedYNChanging(System.Nullable<bool> value);
    partial void OnAdoptedYNChanged();
    partial void OnAdoptionFeeChanging(System.Nullable<decimal> value);
    partial void OnAdoptionFeeChanged();
    partial void OnRoom_Changing(System.Nullable<int> value);
    partial void OnRoom_Changed();
    partial void OnFoodTypeChanging(string value);
    partial void OnFoodTypeChanged();
    partial void OnFoodAmountPerWeekChanging(System.Nullable<int> value);
    partial void OnFoodAmountPerWeekChanged();
    #endregion
		
		public Animal()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AnimalName
		{
			get
			{
				return this._AnimalName;
			}
			set
			{
				if ((this._AnimalName != value))
				{
					this.OnAnimalNameChanging(value);
					this.SendPropertyChanging();
					this._AnimalName = value;
					this.SendPropertyChanged("AnimalName");
					this.OnAnimalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalType", DbType="VarChar(50)")]
		public string AnimalType
		{
			get
			{
				return this._AnimalType;
			}
			set
			{
				if ((this._AnimalType != value))
				{
					this.OnAnimalTypeChanging(value);
					this.SendPropertyChanging();
					this._AnimalType = value;
					this.SendPropertyChanged("AnimalType");
					this.OnAnimalTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnimalBreed", DbType="VarChar(50)")]
		public string AnimalBreed
		{
			get
			{
				return this._AnimalBreed;
			}
			set
			{
				if ((this._AnimalBreed != value))
				{
					this.OnAnimalBreedChanging(value);
					this.SendPropertyChanging();
					this._AnimalBreed = value;
					this.SendPropertyChanged("AnimalBreed");
					this.OnAnimalBreedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaccinatedYN", DbType="Bit")]
		public System.Nullable<bool> VaccinatedYN
		{
			get
			{
				return this._VaccinatedYN;
			}
			set
			{
				if ((this._VaccinatedYN != value))
				{
					this.OnVaccinatedYNChanging(value);
					this.SendPropertyChanging();
					this._VaccinatedYN = value;
					this.SendPropertyChanged("VaccinatedYN");
					this.OnVaccinatedYNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdoptedYN", DbType="Bit")]
		public System.Nullable<bool> AdoptedYN
		{
			get
			{
				return this._AdoptedYN;
			}
			set
			{
				if ((this._AdoptedYN != value))
				{
					this.OnAdoptedYNChanging(value);
					this.SendPropertyChanging();
					this._AdoptedYN = value;
					this.SendPropertyChanged("AdoptedYN");
					this.OnAdoptedYNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdoptionFee", DbType="Money")]
		public System.Nullable<decimal> AdoptionFee
		{
			get
			{
				return this._AdoptionFee;
			}
			set
			{
				if ((this._AdoptionFee != value))
				{
					this.OnAdoptionFeeChanging(value);
					this.SendPropertyChanging();
					this._AdoptionFee = value;
					this.SendPropertyChanged("AdoptionFee");
					this.OnAdoptionFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Room#", Storage="_Room_", DbType="Int")]
		public System.Nullable<int> Room_
		{
			get
			{
				return this._Room_;
			}
			set
			{
				if ((this._Room_ != value))
				{
					this.OnRoom_Changing(value);
					this.SendPropertyChanging();
					this._Room_ = value;
					this.SendPropertyChanged("Room_");
					this.OnRoom_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodType", DbType="VarChar(50)")]
		public string FoodType
		{
			get
			{
				return this._FoodType;
			}
			set
			{
				if ((this._FoodType != value))
				{
					this.OnFoodTypeChanging(value);
					this.SendPropertyChanging();
					this._FoodType = value;
					this.SendPropertyChanged("FoodType");
					this.OnFoodTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodAmountPerWeek", DbType="Int")]
		public System.Nullable<int> FoodAmountPerWeek
		{
			get
			{
				return this._FoodAmountPerWeek;
			}
			set
			{
				if ((this._FoodAmountPerWeek != value))
				{
					this.OnFoodAmountPerWeekChanging(value);
					this.SendPropertyChanging();
					this._FoodAmountPerWeek = value;
					this.SendPropertyChanged("FoodAmountPerWeek");
					this.OnFoodAmountPerWeekChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
